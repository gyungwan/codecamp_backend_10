// sort() 메서드는 배열의 요소를 적절한 위치에 정렬한 후 그 배열을 반환합니다.
//     정렬은 stable sort가 아닐 수 있습니다.
//      기본 정렬 순서는 문자열의 유니코드 코드 포인트를 따릅니다
//      배열 자체가 변경됨 원본배열의 변환
// 괄호 안에 인수로 로직을 담은 함수를 받을수 있음

// 기본구문 arr.sort([compareFunction])

//sort 메소드 배열에만 사용

//로대쉬 사용하면 편함

//숫자열 정렬

// 이 함수가 a, b 두개의 element를 파라미터로 입력받을 경우,

// 이 함수가 리턴하는 값이 0보다 작을 경우,  a가 b보다 앞에 오도록 정렬하고,

// 이 함수가 리턴하는 값이 0보다 클 경우, b가 a보다 앞에 오도록 정렬합니다.

// 만약 0을 리턴하면, a와 b의 순서를 변경하지 않습니다.

// const arr = [ 1, 3, 6, 64, 8, 86, 9, 955 ]
// 숫자 자릿수 변환 sort 함수 원본 배열을 변환시킴
// arr.sort((a,b)=>{   //두수를 받아와서 음수인지 양수인지 0인지 비교
//   // return a - b //오름차순  //a가 크면 양수를 리턴 a가 작으면 음수를 리턴  여기서 a 와 b를 비교후
// a가 작으면 a를 앞으로 놓고 정렬 같으면 0을 반환해서 가만이 있고

//   return b - a //내림차순

// })

//문자열 정렬
//문자열의 크기 비교 아스키 코드에 의해서 문자열의 숫자를 비교후 나열
//소문자의 아스키 코드 숫자가 대문자보다 큼
// const arr = ["a", "b", "c", "G", "F"]

// arr.sort((a , b) =>{
//   // return a < b ? -1 : 1 //오름차순
//   return a > b ? -1 :1 //내림차순
// })
